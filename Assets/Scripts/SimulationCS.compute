// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel Simulate

struct Agent {
	float2 position;
	float angle;
	int4 speciesMask;
	int speciesIndex;
};

// Create a RenderTexture with enableRandomWrite flag and set it
// with cs.SetTexture
RWTexture2D<float4> Display;

RWStructuredBuffer<Agent> agents;
uint numAgents;
float sensorAngle;
float sensorWidth;
float sensorOffset;


[numthreads(16,1,1)]
void Simulate (uint3 id : SV_DispatchThreadID)
{
    // TODO: insert actual code here!
	int posX = (int)agents[id.x].position.x;
	int posY = (int)agents[id.x].position.y;
	Display[int2(posX, posY)] = 1;

    // Result[id.xy] = float4(id.x & id.y, (id.x & 15)/15.0, (id.y & 15)/15.0, 0.0);

}
